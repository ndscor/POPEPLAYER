// Generated by data binding compiler. Do not edit!
package com.dewords.pope.databinding;

import android.graphics.drawable.BitmapDrawable;
import android.net.Uri;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dewords.moviepedia.ui.MediaScrapingActivity;
import com.dewords.pope.R;
import com.dewords.pope.models.resolver.ResolverMedia;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class MoviepediaItemBinding extends ViewDataBinding {
  @NonNull
  public final TextView itemDescription;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextView itemTitle;

  @Bindable
  protected ResolverMedia mItem;

  @Bindable
  protected MediaScrapingActivity.ClickHandler mHandler;

  @Bindable
  protected int mBgColor;

  @Bindable
  protected Uri mImageUrl;

  @Bindable
  protected BitmapDrawable mCover;

  protected MoviepediaItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView itemDescription, ImageView itemImage, TextView itemTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.itemDescription = itemDescription;
    this.itemImage = itemImage;
    this.itemTitle = itemTitle;
  }

  public abstract void setItem(@Nullable ResolverMedia item);

  @Nullable
  public ResolverMedia getItem() {
    return mItem;
  }

  public abstract void setHandler(@Nullable MediaScrapingActivity.ClickHandler handler);

  @Nullable
  public MediaScrapingActivity.ClickHandler getHandler() {
    return mHandler;
  }

  public abstract void setBgColor(int bgColor);

  public int getBgColor() {
    return mBgColor;
  }

  public abstract void setImageUrl(@Nullable Uri imageUrl);

  @Nullable
  public Uri getImageUrl() {
    return mImageUrl;
  }

  public abstract void setCover(@Nullable BitmapDrawable cover);

  @Nullable
  public BitmapDrawable getCover() {
    return mCover;
  }

  @NonNull
  public static MoviepediaItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.moviepedia_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static MoviepediaItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<MoviepediaItemBinding>inflateInternal(inflater, R.layout.moviepedia_item, root, attachToRoot, component);
  }

  @NonNull
  public static MoviepediaItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.moviepedia_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static MoviepediaItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<MoviepediaItemBinding>inflateInternal(inflater, R.layout.moviepedia_item, null, false, component);
  }

  public static MoviepediaItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static MoviepediaItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (MoviepediaItemBinding)bind(component, view, R.layout.moviepedia_item);
  }
}
